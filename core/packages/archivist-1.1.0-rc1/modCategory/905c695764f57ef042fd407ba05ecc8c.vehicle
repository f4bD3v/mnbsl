<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      'f8d4004c5260c8ad6c023af8163f3072' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"name":"Archivist","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Archivist\\n *\\n * Copyright 2010-2011 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Archivist, a simple archive navigation system for MODx\\n * Revolution.\\n *\\n * Archivist is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Archivist is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Archivist; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package archivist\\n *\\/\\n\\/*\\n * Display an archived result filter list\\n * \\n * @package archivist\\n *\\/\\n$archivist = $modx->getService(\'archivist\',\'Archivist\',$modx->getOption(\'archivist.core_path\',null,$modx->getOption(\'core_path\').\'components\\/archivist\\/\').\'model\\/archivist\\/\',$scriptProperties);\\nif (!($archivist instanceof Archivist)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'row\');\\n$parents = !empty($scriptProperties[\'parents\']) ? $scriptProperties[\'parents\'] : $modx->resource->get(\'id\');\\n$parents = explode(\',\',$parents);\\n$target = !empty($scriptProperties[\'target\']) ? $scriptProperties[\'target\'] : $modx->resource->get(\'id\');\\n$sortBy = $modx->getOption(\'sortBy\',$scriptProperties,\'publishedon\');\\n$sortDir = $modx->getOption(\'sortDir\',$scriptProperties,\'DESC\');\\n$depth = $modx->getOption(\'depth\',$scriptProperties,10);\\n$where = $modx->getOption(\'where\',$scriptProperties,\'\');\\n\\n$cls = $modx->getOption(\'cls\',$scriptProperties,\'arc-row\');\\n$altCls = $modx->getOption(\'altCls\',$scriptProperties,\'arc-row-alt\');\\n$lastCls = $modx->getOption(\'lastCls\',$scriptProperties,\'\');\\n$firstCls = $modx->getOption(\'firstCls\',$scriptProperties,\'\');\\n\\n$filterPrefix = $modx->getOption(\'filterPrefix\',$scriptProperties,\'arc_\');\\n$useMonth = $modx->getOption(\'useMonth\',$scriptProperties,true);\\n$useDay = $modx->getOption(\'useDay\',$scriptProperties,false);\\n$dateFormat = !empty($scriptProperties[\'dateFormat\']) ? $scriptProperties[\'dateFormat\'] : \'\';\\n$limit = $modx->getOption(\'limit\',$scriptProperties,10);\\n$start = $modx->getOption(\'start\',$scriptProperties,0);\\n$hideContainers = $modx->getOption(\'hideContainers\',$scriptProperties,true);\\n$useFurls = $modx->getOption(\'useFurls\',$scriptProperties,true);\\n$persistGetParams = $modx->getOption(\'persistGetParams\',$scriptProperties,false);\\n\\n\\/* handle existing GET params *\\/\\n$extraParams = $modx->getOption(\'extraParams\',$scriptProperties,array());\\n$extraParams = $archivist->mergeGetParams($extraParams,$persistGetParams,$filterPrefix);\\n\\n\\/* set locale for date processing *\\/\\nif ($modx->getOption(\'setLocale\',$scriptProperties,true)) {\\n    $cultureKey = $modx->getOption(\'cultureKey\',null,\'en\');\\n    $locale = !empty($scriptProperties[\'locale\']) ? $scriptProperties[\'locale\'] : $cultureKey;\\n    if (!empty($locale)) {\\n        setlocale(LC_ALL,$locale);\\n    }\\n}\\n\\n\\/* find children of parents *\\/\\n$children = array();\\nforeach ($parents as $parent) {\\n    $pchildren = $modx->getChildIds($parent, $depth);\\n    if (!empty($pchildren)) $children = array_merge($children, $pchildren);\\n}\\nif (!empty($children)) $parents = array_merge($parents, $children);\\n\\n\\/* get filter format *\\/\\nif (empty($dateFormat)) {\\n    $dateFormat = $sqlDateFormat = \'%Y\';\\n    if ($useMonth) {\\n        $dateFormat = \'%B \'.$dateFormat;\\n        $sqlDateFormat = \'%b \'.$sqlDateFormat;\\n    }\\n    if ($useDay) {\\n        $dateFormat = \'%d \'.$dateFormat;\\n        $sqlDateFormat = \'%d \'.$sqlDateFormat;\\n    }\\n}\\n\\/* build query *\\/\\n$c = $modx->newQuery(\'modResource\');\\n$fields = $modx->getSelectColumns(\'modResource\',\'\',\'\',array(\'id\',$sortBy));\\n$c->select($fields);\\n$c->select(array(\\n    \'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"\'.$sqlDateFormat.\'\\") AS `date`\',\\n    \'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"\'.$sqlDateFormat.\'\\") AS `date`\',\\n    \'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%D\\") AS `day_formatted`\',\\n    \'COUNT(*) AS `count`\',\\n));\\n$c->where(array(\\n    \'`parent` IN (\'.implode(\',\',$parents).\')\',\\n    \'published\' => true,\\n    \'deleted\' => false,\\n));\\n\\/* don\'t grab unpublished resources *\\/\\n$c->where(array(\\n    \'published\' => true,\\n));\\nif ($hideContainers) {\\n    $c->where(array(\\n        \'isfolder\' => false,\\n    ));\\n}\\nif (!empty($where)) {\\n    $where = $modx->fromJSON($where);\\n    $c->where($where);\\n}\\n$c->sortby(\'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%Y\\") \'.$sortDir.\', FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%m\\") \'.$sortDir.\', FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%d\\") \'.$sortDir,\'\');\\n$c->groupby(\'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"\'.$sqlDateFormat.\'\\")\');\\n\\/* if limiting to X records *\\/\\nif (!empty($limit)) { $c->limit($limit,$start); }\\n$resources = $modx->getIterator(\'modResource\',$c);\\n\\n\\/* iterate over resources *\\/\\n$output = \'\';\\n$idx = 0;\\n$count = count($resources);\\nforeach ($resources as $resource) {\\n    $resourceArray = $resource->toArray();\\n\\n    $date = $resource->get($sortBy);\\n    $dateObj = strtotime($date);\\n    \\n    $resourceArray[\'date\'] = strftime($dateFormat,$dateObj);\\n    $resourceArray[\'month_name_abbr\'] = strftime(\'%h\',$dateObj);\\n    $resourceArray[\'month_name\'] = strftime(\'%B\',$dateObj);\\n    $resourceArray[\'month\'] = strftime(\'%m\',$dateObj);\\n    $resourceArray[\'year\'] = strftime(\'%Y\',$dateObj);\\n    $resourceArray[\'year_two_digit\'] = strftime(\'%y\',$dateObj);\\n    $resourceArray[\'day\'] = strftime(\'%d\',$dateObj);\\n    $resourceArray[\'weekday\'] = strftime(\'%A\',$dateObj);\\n    $resourceArray[\'weekday_abbr\'] = strftime(\'%a\',$dateObj);\\n    $resourceArray[\'weekday_idx\'] = strftime(\'%w\',$dateObj);\\n\\n    \\/* css classes *\\/\\n    $resourceArray[\'cls\'] = $cls;\\n    if ($idx % 2) { $resourceArray[\'cls\'] .= \' \'.$altCls; }\\n    if ($idx == 0 && !empty($firstCls)) { $resourceArray[\'cls\'] .= \' \'.$firstCls; }\\n    if ($idx+1 == $count && !empty($lastCls)) { $resourceArray[\'cls\'] .= \' \'.$lastCls; }\\n\\n    \\/* setup GET params *\\/\\n    $params = array();\\n    $params[$filterPrefix.\'year\'] = $resourceArray[\'year\'];\\n\\n    \\/* if using month filter *\\/\\n    if ($useMonth) {\\n        $params[$filterPrefix.\'month\'] = $resourceArray[\'month\'];\\n    }\\n    \\/* if using day filter (why you would ever is beyond me...) *\\/\\n    if ($useDay) {\\n        $params[$filterPrefix.\'day\'] = $resourceArray[\'day\'];\\n        if (empty($scriptProperties[\'dateFormat\'])) {\\n            $resourceArray[\'date\'] = $resourceArray[\'month_name\'].\' \'.$resourceArray[\'day\'].\', \'.$resourceArray[\'year\'];\\n        }\\n    }\\n\\n    if ($useFurls) {\\n        $params = implode(\'\\/\',$params);\\n        if (!empty($extraParams)) $params .= \'?\'.$extraParams;\\n        $resourceArray[\'url\'] = $modx->makeUrl($target).$params;\\n    } else {\\n        $params = http_build_query($params);\\n        if (!empty($extraParams)) $params .= \'&\'.$extraParams;\\n        $resourceArray[\'url\'] = $modx->makeUrl($target,\'\',$params);\\n    }\\n\\n    $output .= $archivist->getChunk($tpl,$resourceArray);\\n    $idx++;\\n}\\n\\n\\/* output or set to placeholder *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:23:{s:3:\\"tpl\\";a:6:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:23:\\"prop_archivist.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"row\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"target\\";a:6:{s:4:\\"name\\";s:6:\\"target\\";s:4:\\"desc\\";s:26:\\"prop_archivist.target_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"parents\\";a:6:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:27:\\"prop_archivist.parents_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"depth\\";a:6:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:25:\\"prop_archivist.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"sortBy\\";a:6:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:26:\\"prop_archivist.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"sortDir\\";a:6:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:27:\\"prop_archivist.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:18:\\"prop_arc.ascending\\";s:4:\\"vaue\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:19:\\"prop_arc.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"limit\\";a:6:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:25:\\"prop_archivist.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"start\\";a:6:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:25:\\"prop_archivist.start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"useMonth\\";a:6:{s:4:\\"name\\";s:8:\\"useMonth\\";s:4:\\"desc\\";s:28:\\"prop_archivist.usemonth_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"useDay\\";a:6:{s:4:\\"name\\";s:6:\\"useDay\\";s:4:\\"desc\\";s:26:\\"prop_archivist.useday_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:10:\\"dateFormat\\";a:6:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:30:\\"prop_archivist.dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"useFurls\\";a:6:{s:4:\\"name\\";s:8:\\"useFurls\\";s:4:\\"desc\\";s:23:\\"prop_archivist.usefurls\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:16:\\"persistGetParams\\";a:6:{s:4:\\"name\\";s:16:\\"persistGetParams\\";s:4:\\"desc\\";s:36:\\"prop_archivist.persistgetparams_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:11:\\"extraParams\\";a:6:{s:4:\\"name\\";s:11:\\"extraParams\\";s:4:\\"desc\\";s:31:\\"prop_archivist.extraparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:3:\\"cls\\";a:6:{s:4:\\"name\\";s:3:\\"cls\\";s:4:\\"desc\\";s:23:\\"prop_archivist.cls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"arc-row\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"altCls\\";a:6:{s:4:\\"name\\";s:6:\\"altCls\\";s:4:\\"desc\\";s:26:\\"prop_archivist.altcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"arc-row-alt\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"firstCls\\";a:6:{s:4:\\"name\\";s:8:\\"firstCls\\";s:4:\\"desc\\";s:28:\\"prop_archivist.firstcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"lastCls\\";a:6:{s:4:\\"name\\";s:7:\\"lastCls\\";s:4:\\"desc\\";s:27:\\"prop_archivist.lastcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:12:\\"filterPrefix\\";a:6:{s:4:\\"name\\";s:12:\\"filterPrefix\\";s:4:\\"desc\\";s:32:\\"prop_archivist.filterprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"arc_\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:13:\\"toPlaceholder\\";a:6:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:33:\\"prop_archivist.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:9:\\"setLocale\\";a:6:{s:4:\\"name\\";s:9:\\"setLocale\\";s:4:\\"desc\\";s:29:\\"prop_archivist.setlocale_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"locale\\";a:6:{s:4:\\"name\\";s:6:\\"locale\\";s:4:\\"desc\\";s:26:\\"prop_archivist.locale_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:14:\\"hideContainers\\";a:6:{s:4:\\"name\\";s:14:\\"hideContainers\\";s:4:\\"desc\\";s:41:\\"prop_archivistbymonth.hidecontainers_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}}","moduleguid":""}',
        'guid' => '8f9adab58c8a02f25d8b3478669a21c2',
        'native_key' => 1,
        'signature' => 'ef4cb90f473bfb1d4ea0b4f81a1ee327',
      ),
      '19d19eb8d705616f3e1c4f326d9885ec' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"name":"getArchives","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Archivist\\n *\\n * Copyright 2010-2011 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Archivist, a simple archive navigation system for MODx\\n * Revolution.\\n *\\n * Archivist is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Archivist is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Archivist; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package archivist\\n *\\/\\n\\/**\\n * getArchives\\n *\\n * Used to display a list of Resources for a given archive state.\\n *\\n * Written by Shaun McCormick <shaun@modx.com>. Based on getResources by Jason Coward <jason@modxcms.com>\\n *\\n * @package archivist\\n *\\/\\n$archivist = $modx->getService(\'archivist\',\'Archivist\',$modx->getOption(\'archivist.core_path\',null,$modx->getOption(\'core_path\').\'components\\/archivist\\/\').\'model\\/archivist\\/\',$scriptProperties);\\nif (!($archivist instanceof Archivist)) return \'\';\\n\\n\\/* setup some getArchives-specific properties *\\/\\n$filterPrefix = $modx->getOption(\'filterPrefix\',$scriptProperties,\'arc_\');\\n$filterField = $modx->getOption(\'filterField\',$scriptProperties,\'publishedon\');\\n$tagsIndex = $modx->getOption(\'tagsIndex\',$scriptProperties,\'tags\');\\n\\n\\/* first off, let\'s sync the archivist.archive_ids setting *\\/\\n$archivist->makeArchive($modx->resource->get(\'id\'),$filterPrefix);\\n\\n\\/* get filter by year, month, and\\/or day. Sanitize to prevent injection. *\\/\\n$where = array();\\n$year = $modx->getOption($filterPrefix.\'year\',$_REQUEST,$modx->getOption(\'year\',$scriptProperties,\'\'));\\n$year = (int)$archivist->sanitize($year);\\nif (!empty($year)) {\\n    $modx->setPlaceholder($filterPrefix.\'year\',$year);\\n    $where[] = \'FROM_UNIXTIME(`\'.$filterField.\'`,\\"%Y\\") = \\"\'.$year.\'\\"\';\\n}\\n$month = $modx->getOption($filterPrefix.\'month\',$_REQUEST,$modx->getOption(\'month\',$scriptProperties,\'\'));\\n$month = (int)$archivist->sanitize($month);\\nif (!empty($month)) {\\n    if (strlen($month) == 1) $month = \'0\'.$month;\\n    $modx->setPlaceholder($filterPrefix.\'month\',$month);\\n    $modx->setPlaceholder($filterPrefix.\'month_name\',$archivist->translateMonth($month));\\n    $where[] = \'FROM_UNIXTIME(`\'.$filterField.\'`,\\"%m\\") = \\"\'.$month.\'\\"\';\\n}\\n$day = $modx->getOption($filterPrefix.\'day\',$_REQUEST,$modx->getOption(\'day\',$scriptProperties,\'\'));\\n$day = (int)$archivist->sanitize($day);\\nif (!empty($day)) {\\n    if (strlen($day) == 1) $day = \'0\'.$day;\\n    $modx->setPlaceholder($filterPrefix.\'day\',$day);\\n    $where[] = \'FROM_UNIXTIME(`\'.$filterField.\'`,\\"%d\\") = \\"\'.$day.\'\\"\';\\n}\\n$scriptProperties[\'where\'] = $modx->toJSON($where);\\n\\n\\/* automatically integrate for tags (fun!) *\\/\\nif (!empty($tagsIndex) && isset($_REQUEST[$tagsIndex])) {\\n    $tags = $archivist->sanitize($_REQUEST[$tagsIndex]);\\n    if (empty($scriptProperties[\'tvFilters\'])) {\\n        $scriptProperties[\'tvFilters\'] = $tagsIndex.\'==%\'.$tags.\'%\';\\n    } else {\\n        $scriptProperties[\'tvFilters\'] .= \',\'.$tagsIndex.\'==%\'.$tags.\'%\';\\n    }\\n}\\n\\n\\n\\/* below this is mostly getResources code, with extra \'where\' and \'toPlaceholder\' parameters *\\/\\n\\n\\/* set default properties *\\/\\n$output = array();\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'\');\\n$includeContent = $modx->getOption(\'includeContent\',$scriptProperties,false);\\n$includeTVs = $modx->getOption(\'includeTVs\',$scriptProperties,false);\\n$processTVs = $modx->getOption(\'processTVs\',$scriptProperties,false);\\n$parents = explode(\',\',$modx->getOption(\'parents\',$scriptProperties,$modx->resource->get(\'id\')));\\n$tvPrefix = $modx->getOption(\'tvPrefix\',$scriptProperties,\'tv.\');\\n$depth = (int)$modx->getOption(\'depth\',$scriptProperties,10);\\n$hideContainers = $modx->getOption(\'hideContainers\',$scriptProperties,true);\\n$where = $modx->getOption(\'where\',$scriptProperties,false);\\n\\n\\/* find children of parents *\\/\\n$children = array();\\nforeach ($parents as $parent) {\\n    $pchildren = $modx->getChildIds($parent, $depth);\\n    if (!empty($pchildren)) $children = array_merge($children, $pchildren);\\n}\\nif (!empty($children)) $parents = array_merge($parents, $children);\\n\\n$tvFilters = !empty($scriptProperties[\'tvFilters\']) ? explode(\'||\', $scriptProperties[\'tvFilters\']) : array();\\n\\n$sortby = $modx->getOption(\'sortby\',$scriptProperties,\'publishedon\');\\n$sortbyAlias = $modx->getOption(\'sortbyAlias\',$scriptProperties,\'modResource\');\\n$sortbyEscaped = $modx->getOption(\'sortbyEscaped\',$scriptProperties,false);\\nif ($sortbyEscaped) $sortby = \\"`{$sortby}`\\";\\nif (!empty($sortbyAlias)) $sortby = \\"`{$sortbyAlias}`.{$sortby}\\";\\n\\n$sortdir = $modx->getOption(\'sortdir\',$scriptProperties,\'DESC\');\\n$limit = (int)$modx->getOption(\'limit\',$scriptProperties,5);\\n$offset = (int)$modx->getOption(\'offset\',$scriptProperties,0);\\n$totalVar = $modx->getOption(\'totalVar\',$scriptProperties,\'total\');\\n\\n\\/* build query *\\/\\n$contextResourceTbl = $modx->getTableName(\'modContextResource\');\\n$context = empty($context) ? $modx->quote($modx->context->get(\'key\')) : $modx->quote($context);\\n$criteria = $modx->newQuery(\'modResource\', array(\\n    \'deleted\' => \'0\'\\n    ,\'published\' => \'1\'\\n    ,\\"`modResource`.`parent` IN (\\" . implode(\',\', $parents) . \\")\\"\\n    ,\\"(`modResource`.`context_key` = {$context} OR EXISTS(SELECT 1 FROM {$contextResourceTbl} `ctx` WHERE `ctx`.`resource` = `modResource`.`id` AND `ctx`.`context_key` = {$context}))\\"\\n));\\nif (empty($showHidden)) {\\n    $criteria->andCondition(array(\'hidemenu\' => \'0\'));\\n}\\nif (!empty($hideContainers)) {\\n    $criteria->andCondition(array(\'isfolder\' => \'0\'));\\n}\\n\\n\\/* added for getArchives *\\/\\nif (!empty($where)) {\\n    $where = $modx->fromJSON($where);\\n    if (is_array($where) && !empty($where)) {\\n        $criteria->where($where);\\n    }\\n}\\nif (!empty($tvFilters)) {\\n    $tmplVarTbl = $modx->getTableName(\'modTemplateVar\');\\n    $tmplVarResourceTbl = $modx->getTableName(\'modTemplateVarResource\');\\n    $conditions = array();\\n    foreach ($tvFilters as $fGroup => $tvFilter) {\\n        $filterGroup = count($tvFilters) > 1 ? $fGroup + 1 : 0;\\n        $filters = explode(\',\', $tvFilter);\\n        foreach ($filters as $filter) {\\n            $f = explode(\'==\', $filter);\\n            if (count($f) == 2) {\\n                $tvName = $modx->quote($f[0]);\\n                $tvValue = $modx->quote($f[1]);\\n                $conditions[$filterGroup][] = \\"EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} `tvr` JOIN {$tmplVarTbl} `tv` ON `tvr`.`value` LIKE {$tvValue} AND `tv`.`name` = {$tvName} AND `tv`.`id` = `tvr`.`tmplvarid` WHERE `tvr`.`contentid` = `modResource`.`id`)\\";\\n            } elseif (count($f) == 1) {\\n                $tvValue = $modx->quote($f[0]);\\n                $conditions[$filterGroup][] = \\"EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} `tvr` JOIN {$tmplVarTbl} `tv` ON `tvr`.`value` LIKE {$tvValue} AND `tv`.`id` = `tvr`.`tmplvarid` WHERE `tvr`.`contentid` = `modResource`.`id`)\\";\\n            }\\n        }\\n    }\\n    if (!empty($conditions)) {\\n        foreach ($conditions as $cGroup => $c) {\\n            if ($cGroup > 0) {\\n                $criteria->orCondition($c, null, $cGroup);\\n            } else {\\n                $criteria->andCondition($c);\\n            }\\n        }\\n    }\\n}\\n\\n$total = $modx->getCount(\'modResource\', $criteria);\\n$modx->setPlaceholder($totalVar, $total);\\n\\n$criteria->sortby($sortby, $sortdir);\\nif (!empty($limit)) $criteria->limit($limit, $offset);\\n$columns = $includeContent ? \'*\' : $modx->getSelectColumns(\'modResource\', \'modResource\', \'\', array(\'content\'), true);\\n$criteria->select($columns);\\nif (!empty($debug)) {\\n    $criteria->prepare();\\n    $modx->log(modX::LOG_LEVEL_ERROR, $criteria->toSQL());\\n}\\n$collection = $modx->getIterator(\'modResource\', $criteria);\\n\\n$idx = !empty($idx) ? intval($idx) : 1;\\n$first = empty($first) && $first !== \'0\' ? 1 : intval($first);\\n$last = empty($last) ? (count($collection) + $idx - 1) : intval($last);\\n\\n\\/* include parseTpl *\\/\\ninclude_once $modx->getOption(\'core_path\').\'components\\/getresources\\/include.parsetpl.php\';\\n\\nforeach ($collection as $resourceId => $resource) {\\n    $tvs = array();\\n    if (!empty($includeTVs)) {\\n        $templateVars =& $resource->getMany(\'TemplateVars\');\\n        foreach ($templateVars as $tvId => $templateVar) {\\n            $tvs[$tvPrefix . $templateVar->get(\'name\')] = !empty($processTVs) ? $templateVar->renderOutput($resource->get(\'id\')) : $templateVar->get(\'value\');\\n        }\\n    }\\n    $odd = ($idx & 1);\\n    $properties = array_merge(\\n        $scriptProperties\\n        ,array(\\n            \'idx\' => $idx\\n            ,\'first\' => $first\\n            ,\'last\' => $last\\n        )\\n        ,$resource->toArray()\\n        ,$tvs\\n    );\\n    $resourceTpl = \'\';\\n    $tplidx = \'tpl_\' . $idx;\\n    if (!empty($$tplidx)) $resourceTpl = parseTpl($$tplidx, $properties);\\n    switch ($idx) {\\n        case $first:\\n            if (!empty($tplFirst)) $resourceTpl = parseTpl($tplFirst, $properties);\\n            break;\\n        case $last:\\n            if (!empty($tplLast)) $resourceTpl = parseTpl($tplLast, $properties);\\n            break;\\n    }\\n    if ($odd && empty($resourceTpl) && !empty($tplOdd)) $resourceTpl = parseTpl($tplOdd, $properties);\\n    if (!empty($tpl) && empty($resourceTpl)) $resourceTpl = parseTpl($tpl, $properties);\\n    if (empty($resourceTpl)) {\\n        $output[] = $archivist->getChunk(\'ArchivedItem\',$properties);\\n    } else {\\n        $output[]= $resourceTpl;\\n    }\\n    $idx++;\\n}\\n$output = implode(\\"\\\\n\\", $output);\\n\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:25:{s:3:\\"tpl\\";a:6:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:25:\\"prop_getarchives.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:11:\\"filterField\\";a:6:{s:4:\\"name\\";s:11:\\"filterField\\";s:4:\\"desc\\";s:33:\\"prop_getarchives.filterfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:12:\\"filterPrefix\\";a:6:{s:4:\\"name\\";s:12:\\"filterPrefix\\";s:4:\\"desc\\";s:34:\\"prop_getarchives.filterprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"arc_\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:9:\\"tagsIndex\\";a:6:{s:4:\\"name\\";s:9:\\"tagsIndex\\";s:4:\\"desc\\";s:31:\\"prop_getarchives.tagsindex_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"tags\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:13:\\"toPlaceholder\\";a:6:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:35:\\"prop_getarchives.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"tplOdd\\";a:6:{s:4:\\"name\\";s:6:\\"tplOdd\\";s:4:\\"desc\\";s:28:\\"prop_getarchives.tplodd_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"tplFirst\\";a:6:{s:4:\\"name\\";s:8:\\"tplFirst\\";s:4:\\"desc\\";s:30:\\"prop_getarchives.tplfirst_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"tplLast\\";a:6:{s:4:\\"name\\";s:7:\\"tplLast\\";s:4:\\"desc\\";s:29:\\"prop_getarchives.tpllast_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"sortby\\";a:6:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:28:\\"prop_getarchives.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:11:\\"sortbyAlias\\";a:6:{s:4:\\"name\\";s:11:\\"sortbyAlias\\";s:4:\\"desc\\";s:33:\\"prop_getarchives.sortbyalias_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:13:\\"sortbyEscaped\\";a:6:{s:4:\\"name\\";s:13:\\"sortbyEscaped\\";s:4:\\"desc\\";s:35:\\"prop_getarchives.sortbyescaped_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"sortdir\\";a:6:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:29:\\"prop_getarchives.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:18:\\"prop_arc.ascending\\";s:4:\\"vaue\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:19:\\"prop_arc.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"limit\\";a:6:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:27:\\"prop_getarchives.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"5\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"offset\\";a:6:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:28:\\"prop_getarchives.offset_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:9:\\"tvFilters\\";a:6:{s:4:\\"name\\";s:9:\\"tvFilters\\";s:4:\\"desc\\";s:31:\\"prop_getarchives.tvfilters_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"depth\\";a:6:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:27:\\"prop_getarchives.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"parents\\";a:6:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:29:\\"prop_getarchives.parents_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:14:\\"includeContent\\";a:6:{s:4:\\"name\\";s:14:\\"includeContent\\";s:4:\\"desc\\";s:36:\\"prop_getarchives.includecontent_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:10:\\"includeTVs\\";a:6:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:32:\\"prop_getarchives.includetvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:10:\\"processTVs\\";a:6:{s:4:\\"name\\";s:10:\\"processTVs\\";s:4:\\"desc\\";s:32:\\"prop_getarchives.processtvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"tvPrefix\\";a:6:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:30:\\"prop_getarchives.tvprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tv.\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:3:\\"idx\\";a:6:{s:4:\\"name\\";s:3:\\"idx\\";s:4:\\"desc\\";s:25:\\"prop_getarchives.idx_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"first\\";a:6:{s:4:\\"name\\";s:5:\\"first\\";s:4:\\"desc\\";s:27:\\"prop_getarchives.first_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:4:\\"last\\";a:6:{s:4:\\"name\\";s:4:\\"last\\";s:4:\\"desc\\";s:26:\\"prop_getarchives.last_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"debug\\";a:6:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:27:\\"prop_getarchives.debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}}","moduleguid":""}',
        'guid' => '70c07408aa6044dab5c2897a9e1fd468',
        'native_key' => 2,
        'signature' => '062181dcbf7b2d5c72c3d3f8add5781f',
      ),
      '03f7b2d5272ca721c21062de14784e71' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"name":"ArchivistGrouper","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Archivist\\n *\\n * Copyright 2010-2011 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Archivist, a simple archive navigation system for MODx\\n * Revolution.\\n *\\n * Archivist is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Archivist is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Archivist; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package archivist\\n *\\/\\n\\/*\\n * Display an archived result filter list, nested by month\\n *\\n * @package archivist\\n *\\/\\n$archivist = $modx->getService(\'archivist\',\'Archivist\',$modx->getOption(\'archivist.core_path\',null,$modx->getOption(\'core_path\').\'components\\/archivist\\/\').\'model\\/archivist\\/\',$scriptProperties);\\nif (!($archivist instanceof Archivist)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$mode = $modx->getOption(\'mode\',$scriptProperties,\'month\');\\n$itemTpl = $modx->getOption(\'itemTpl\',$scriptProperties,\'itemBrief\');\\n$parents = !empty($scriptProperties[\'parents\']) ? $scriptProperties[\'parents\'] : $modx->resource->get(\'id\');\\n$parents = explode(\',\',$parents);\\n$target = !empty($scriptProperties[\'target\']) ? $scriptProperties[\'target\'] : $modx->resource->get(\'id\');\\n$depth = $modx->getOption(\'depth\',$scriptProperties,10);\\n$where = $modx->getOption(\'where\',$scriptProperties,\'\');\\n$hideContainers = $modx->getOption(\'hideContainers\',$scriptProperties,true);\\n$sortBy = $modx->getOption(\'sortBy\',$scriptProperties,\'publishedon\');\\n$sortDir = $modx->getOption(\'sortDir\',$scriptProperties,\'DESC\');\\n$dateFormat = !empty($scriptProperties[\'dateFormat\']) ? $scriptProperties[\'dateFormat\'] : \'\';\\n$limitGroups = $modx->getOption(\'limitGroups\',$scriptProperties,5);\\n$resourceSeparator = $modx->getOption(\'resourceSeparator\',$scriptProperties,\\"\\\\n\\");\\n$groupSeparator = $modx->getOption(\'monthSeparator\',$scriptProperties,\\"\\\\n\\");\\n\\n$filterPrefix = $modx->getOption(\'filterPrefix\',$scriptProperties,\'arc_\');\\n$useFurls = $modx->getOption(\'useFurls\',$scriptProperties,true);\\n$persistGetParams = $modx->getOption(\'persistGetParams\',$scriptProperties,false);\\n\\/* handle existing GET params *\\/\\n$extraParams = $modx->getOption(\'extraParams\',$scriptProperties,array());\\n$extraParams = $archivist->mergeGetParams($extraParams,$persistGetParams,$filterPrefix);\\n\\n$cls = $modx->getOption(\'cls\',$scriptProperties,\'arc-resource-row\');\\n$altCls = $modx->getOption(\'altCls\',$scriptProperties,\'arc-resource-row-alt\');\\n\\n\\/* set locale for date processing *\\/\\nif ($modx->getOption(\'setLocale\',$scriptProperties,true)) {\\n    $cultureKey = $modx->getOption(\'cultureKey\',null,\'en\');\\n    $locale = !empty($scriptProperties[\'locale\']) ? $scriptProperties[\'locale\'] : $cultureKey;\\n    if (!empty($locale)) {\\n        setlocale(LC_ALL,$locale);\\n    }\\n}\\n\\n\\/* find children of parents *\\/\\n$children = array();\\nforeach ($parents as $parent) {\\n    $pchildren = $modx->getChildIds($parent, $depth);\\n    if (!empty($pchildren)) $children = array_merge($children, $pchildren);\\n}\\nif (!empty($children)) $parents = array_merge($parents, $children);\\n\\n\\/* build query *\\/\\n$c = $modx->newQuery(\'modResource\');\\n$c->where(array(\\n    \'parent:IN\' => $parents,\\n    \'published\' => true,\\n    \'deleted\' => false,\\n));\\nif ($hideContainers) {\\n    $c->where(array(\\n        \'isfolder\' => false,\\n    ));\\n}\\nif (!empty($where)) {\\n    $where = $modx->fromJSON($where);\\n    $c->where($where);\\n}\\n$c->sortby(\'FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%Y\\") \'.$sortDir.\', FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%m\\") \'.$sortDir.\', FROM_UNIXTIME(`\'.$sortBy.\'`,\\"%d\\") \'.$sortDir,\'\');\\n$resources = $modx->getIterator(\'modResource\',$c);\\n\\n\\/* get grouping constraint *\\/\\nswitch ($mode) {\\n    case \'year\':\\n        $groupConstraint = \'%Y-01-01\';\\n        $groupDefaultTpl = \'yearContainer\';\\n        break;\\n    case \'month\':\\n    default:\\n        $groupConstraint = \'%Y-%m-01\';\\n        $groupDefaultTpl = \'monthContainer\';\\n        break;\\n}\\n$groupTpl = !empty($scriptProperties[\'groupTpl\']) ? $scriptProperties[\'groupTpl\'] : $groupDefaultTpl;\\n\\n\\/* iterate over resources *\\/\\n$output = array();\\n$children = array();\\n$resourceArray = array();\\n$groupIdx = 0;\\n$childIdx = 0;\\n$countGroups = 0;\\nforeach ($resources as $resource) {\\n    $resourceArray = $resource->toArray();\\n    $date = $resource->get($sortBy);\\n    $dateObj = strtotime($date);\\n    $activeTime = strftime($groupConstraint,$dateObj);\\n    if (!isset($currentTime)) {\\n        $currentTime = $activeTime;\\n    }\\n\\n    $resourceArray[\'date\'] = strftime($dateFormat,$dateObj);\\n    $resourceArray[\'month_name_abbr\'] = strftime(\'%h\',$dateObj);\\n    $resourceArray[\'month_name\'] = strftime(\'%B\',$dateObj);\\n    $resourceArray[\'month\'] = strftime(\'%m\',$dateObj);\\n    $resourceArray[\'year\'] = strftime(\'%Y\',$dateObj);\\n    $resourceArray[\'year_two_digit\'] = strftime(\'%y\',$dateObj);\\n    $resourceArray[\'day\'] = strftime(\'%d\',$dateObj);\\n    $resourceArray[\'weekday\'] = strftime(\'%A\',$dateObj);\\n    $resourceArray[\'weekday_abbr\'] = strftime(\'%a\',$dateObj);\\n    $resourceArray[\'weekday_idx\'] = strftime(\'%w\',$dateObj);\\n\\n    \\/* css classes *\\/\\n    $resourceArray[\'cls\'] = $cls;\\n    if ($childIdx % 2) { $resourceArray[\'cls\'] .= \' \'.$altCls; }\\n    $resourceArray[\'idx\'] = $childIdx;\\n\\n    if ($currentTime != $activeTime) {\\n        $groupArray = array();\\n        $timestamp = strtotime($currentTime);\\n        $groupArray[\'month_name\'] = strftime(\'%B\',$timestamp);\\n        $groupArray[\'month\'] = strftime(\'%m\',$timestamp);\\n        $groupArray[\'year\'] = strftime(\'%Y\',$timestamp);\\n        $groupArray[\'year_two_digit\'] = strftime(\'%y\',$timestamp);\\n        $groupArray[\'day\'] = strftime(\'%d\',$timestamp);\\n        $groupArray[\'weekday\'] = strftime(\'%A\',$timestamp);\\n        $groupArray[\'weekday_abbr\'] = strftime(\'%a\',$timestamp);\\n        $groupArray[\'weekday_idx\'] = strftime(\'%w\',$timestamp);\\n        $groupArray[\'resources\'] = implode($resourceSeparator,$children);\\n        $groupArray[\'idx\'] = $groupIdx;\\n\\n        \\/* setup GET params *\\/\\n        $params = array();\\n        $params[$filterPrefix.\'year\'] = $groupArray[\'year\'];\\n        if ($mode == \'month\') {\\n            $params[$filterPrefix.\'month\'] = $groupArray[\'month\'];\\n        }\\n\\n        if ($useFurls) {\\n            $params = implode(\'\\/\',$params);\\n            if (!empty($extraParams)) $params .= \'?\'.$extraParams;\\n            $groupArray[\'url\'] = $modx->makeUrl($target).$params;\\n        } else {\\n            $params = http_build_query($params);\\n            if (!empty($extraParams)) $params .= \'&\'.$extraParams;\\n            $groupArray[\'url\'] = $modx->makeUrl($target,\'\',$params);\\n        }\\n        \\n        $output[] = $archivist->getChunk($groupTpl,$groupArray);\\n        $children = array();\\n        $childIdx = 0;\\n        $countGroups++;\\n        $groupIdx++;\\n        $currentTime = $activeTime;\\n    }\\n    $children[] = $archivist->getChunk($itemTpl,$resourceArray);\\n    $childIdx++;\\n    if ($countGroups >= $limitGroups) {\\n        break;\\n    }\\n}\\n\\n$groupArray = array();\\n$timestamp = strtotime($currentTime);\\n$groupArray[\'month_name\'] = strftime(\'%B\',$timestamp);\\n$groupArray[\'month\'] = strftime(\'%m\',$timestamp);\\n$groupArray[\'year\'] = strftime(\'%Y\',$timestamp);\\n$groupArray[\'year_two_digit\'] = strftime(\'%y\',$timestamp);\\n$groupArray[\'day\'] = strftime(\'%d\',$timestamp);\\n$groupArray[\'weekday\'] = strftime(\'%A\',$timestamp);\\n$groupArray[\'weekday_abbr\'] = strftime(\'%a\',$timestamp);\\n$groupArray[\'weekday_idx\'] = strftime(\'%w\',$timestamp);\\n$groupArray[\'resources\'] = implode($resourceSeparator,$children);\\n$groupArray[\'idx\'] = $groupIdx;\\n\\/* setup GET params *\\/\\n$params = array();\\n$params[$filterPrefix.\'year\'] = $groupArray[\'year\'];\\nif ($mode == \'month\') {\\n    $params[$filterPrefix.\'month\'] = $groupArray[\'month\'];\\n}\\n\\nif ($useFurls) {\\n    $params = implode(\'\\/\',$params);\\n    if (!empty($extraParams)) $params .= \'?\'.$extraParams;\\n    $groupArray[\'url\'] = $modx->makeUrl($target).$params;\\n} else {\\n    $params = http_build_query($params);\\n    if (!empty($extraParams)) $params .= \'&\'.$extraParams;\\n    $groupArray[\'url\'] = $modx->makeUrl($target,\'\',$params);\\n}\\n$output[] = $archivist->getChunk($groupTpl,$groupArray);\\n$children = array();\\n$childIdx = 0;\\n$countGroups++;\\n$groupIdx++;\\n\\n\\/* output or set to placeholder *\\/\\n$output = implode(\\"\\\\n\\",$output);\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:20:{s:4:\\"mode\\";a:6:{s:4:\\"name\\";s:4:\\"mode\\";s:4:\\"desc\\";s:31:\\"prop_archivistgrouper.mode_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:14:\\"prop_arc.month\\";s:4:\\"vaue\\";s:5:\\"month\\";}i:1;a:2:{s:4:\\"text\\";s:13:\\"prop_arc.year\\";s:5:\\"value\\";s:4:\\"year\\";}}s:5:\\"value\\";s:5:\\"month\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"itemTpl\\";a:6:{s:4:\\"name\\";s:7:\\"itemTpl\\";s:4:\\"desc\\";s:34:\\"prop_archivistgrouper.itemtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"itemBrief\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"groupTpl\\";a:6:{s:4:\\"name\\";s:8:\\"groupTpl\\";s:4:\\"desc\\";s:35:\\"prop_archivistgrouper.grouptpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"target\\";a:6:{s:4:\\"name\\";s:6:\\"target\\";s:4:\\"desc\\";s:33:\\"prop_archivistgrouper.target_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"parents\\";a:6:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:34:\\"prop_archivistgrouper.parents_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:5:\\"depth\\";a:6:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:32:\\"prop_archivistgrouper.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"sortBy\\";a:6:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:33:\\"prop_archivistgrouper.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:7:\\"sortDir\\";a:6:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:34:\\"prop_archivistgrouper.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:18:\\"prop_arc.ascending\\";s:4:\\"vaue\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:19:\\"prop_arc.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:11:\\"limitGroups\\";a:6:{s:4:\\"name\\";s:11:\\"limitGroups\\";s:4:\\"desc\\";s:38:\\"prop_archivistgrouper.limitgroups_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:10:\\"dateFormat\\";a:6:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:37:\\"prop_archivistgrouper.dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:3:\\"cls\\";a:6:{s:4:\\"name\\";s:3:\\"cls\\";s:4:\\"desc\\";s:30:\\"prop_archivistgrouper.cls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"arc-row\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"altCls\\";a:6:{s:4:\\"name\\";s:6:\\"altCls\\";s:4:\\"desc\\";s:33:\\"prop_archivistgrouper.altcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"arc-row-alt\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:13:\\"toPlaceholder\\";a:6:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:40:\\"prop_archivistgrouper.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:9:\\"setLocale\\";a:6:{s:4:\\"name\\";s:9:\\"setLocale\\";s:4:\\"desc\\";s:36:\\"prop_archivistgrouper.setlocale_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:6:\\"locale\\";a:6:{s:4:\\"name\\";s:6:\\"locale\\";s:4:\\"desc\\";s:33:\\"prop_archivistgrouper.locale_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:12:\\"filterPrefix\\";a:6:{s:4:\\"name\\";s:12:\\"filterPrefix\\";s:4:\\"desc\\";s:39:\\"prop_archivistgrouper.filterprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"arc_\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:8:\\"useFurls\\";a:6:{s:4:\\"name\\";s:8:\\"useFurls\\";s:4:\\"desc\\";s:30:\\"prop_archivistgrouper.usefurls\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:16:\\"persistGetParams\\";a:6:{s:4:\\"name\\";s:16:\\"persistGetParams\\";s:4:\\"desc\\";s:43:\\"prop_archivistgrouper.persistgetparams_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:11:\\"extraParams\\";a:6:{s:4:\\"name\\";s:11:\\"extraParams\\";s:4:\\"desc\\";s:38:\\"prop_archivistgrouper.extraparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}s:14:\\"hideContainers\\";a:6:{s:4:\\"name\\";s:14:\\"hideContainers\\";s:4:\\"desc\\";s:41:\\"prop_archivistgrouper.hidecontainers_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"archivist:properties\\";}}","moduleguid":""}',
        'guid' => '9bd0a714ea89452f088a540643f3f975',
        'native_key' => 3,
        'signature' => '6a4967a3d28a6fb678f255097959e578',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'archivist',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"archivist-1.1.0-rc1\\/modCategory\\/905c695764f57ef042fd407ba05ecc8c\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"archivist"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '0344a446e69959924a371ac85a8dd70a',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '905c695764f57ef042fd407ba05ecc8c',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"Archivist"}',
);