<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      '263eebd7e23796ce0f8e0d9b3bc2ecf4' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"name":"tagLister","description":"A simple tag listing snippet that grabs tags from a TV value.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * tagLister\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modxcms.com>\\n *\\n * This file is part of tagLister, a simple tag listing snippet for MODx\\n * Revolution.\\n *\\n * tagLister is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * tagLister is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * tagLister; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package taglister\\n *\\/\\n\\/**\\n * tagLister snippet\\n *\\n * @package taglister\\n *\\/\\n$tagLister = $modx->getService(\'taglister\',\'TagLister\',$modx->getOption(\'taglister.core_path\',null,$modx->getOption(\'core_path\').\'components\\/taglister\\/\').\'model\\/taglister\\/\',$scriptProperties);\\nif (!($tagLister instanceof TagLister)) return \'\';\\n$modx->lexicon->load(\'taglister:default\');\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'tag\');\\n$tv = $modx->getOption(\'tv\',$scriptProperties,\'tags\');\\n$tvDelimiter = $modx->getOption(\'tvDelimiter\',$scriptProperties,\',\');\\n$target = $modx->getOption(\'target\',$scriptProperties,1);\\n$tagVar = $modx->getOption(\'tagVar\',$scriptProperties,\'tag\');\\n$tagKeyVar = $modx->getOption(\'tagKeyVar\',$scriptProperties,\'key\');\\n$limit = $modx->getOption(\'limit\',$scriptProperties,10);\\n$sortBy = strtolower($modx->getOption(\'sortBy\',$scriptProperties,\'count\'));\\n$sortDir = strtoupper($modx->getOption(\'sortDir\',$scriptProperties,\'ASC\'));\\n$cls = $modx->getOption(\'cls\',$scriptProperties,\'\');\\n$altCls = $modx->getOption(\'altCls\',$scriptProperties,\'\');\\n$firstCls = $modx->getOption(\'firstCls\',$scriptProperties,\'\');\\n$lastCls = $modx->getOption(\'lastCls\',$scriptProperties,\'\');\\n$activeCls = $modx->getOption(\'activeCls\',$scriptProperties,\'\');\\n$activeTag = $modx->stripTags(urldecode($_REQUEST[$tagVar]));\\n$activeKey = $modx->stripTags(urldecode($_REQUEST[$tagKeyVar]));\\n$all = $modx->getOption(\'all\',$scriptProperties,false);\\n$toLower = $modx->getOption(\'toLower\',$scriptProperties,false);\\n$weights = $modx->getOption(\'weights\',$scriptProperties,0);\\n$weightCls = $modx->getOption(\'weightCls\',$scriptProperties,\'\');\\n\\n\\/* parents support *\\/\\n$parents = isset($parents) ? explode(\',\', $parents) : array();\\n$depth = isset($depth) ? (integer) $depth : 10;\\n$children = array();\\nforeach ($parents as $parent) {\\n    $pchildren = $modx->getChildIds($parent, $depth);\\n    if (!empty($pchildren)) $children = array_merge($children, $pchildren);\\n}\\nif (!empty($children)) $parents = array_merge($parents, $children);\\n\\n\\/* get TV values *\\/\\n$c = $modx->newQuery(\'modTemplateVarResource\');\\n$c->innerJoin(\'modTemplateVar\',\'TemplateVar\');\\n$c->innerJoin(\'modResource\',\'Resource\');\\n$c->leftJoin(\'modUser\',\'CreatedBy\',\'CreatedBy.id = Resource.createdby\');\\n$c->leftJoin(\'modUser\',\'PublishedBy\',\'PublishedBy.id = Resource.publishedby\');\\n$c->leftJoin(\'modUser\',\'EditedBy\',\'EditedBy.id = Resource.editedby\');\\n$tvPk = (int)$tv;\\nif (!empty($tvPk)) {\\n    $c->where(array(\'TemplateVar.id\' => $tvPk));\\n} else {\\n    $c->where(array(\'TemplateVar.name\' => $tv));\\n}\\nif (!empty($parents)) {\\n    $c->where(array(\\n        \'Resource.parent:IN\' => $parents,\\n    ));\\n}\\nif (!$modx->getOption(\'includeDeleted\',$scriptProperties,false)) {\\n    $c->where(array(\'Resource.deleted\' => 0));\\n}\\nif (!$modx->getOption(\'includeUnpublished\',$scriptProperties,false)) {\\n    $c->where(array(\'Resource.published\' => 1));\\n}\\n\\/* json where support *\\/\\n$where = $modx->getOption(\'where\',$scriptProperties,\'\');\\nif (!empty($where)) {\\n    $where = $modx->fromJSON($where);\\n    if (is_array($where) && !empty($where)) {\\n        $c->where($where);\\n    }\\n}\\nif ($sortBy == \'publishedon\') {\\n    $c->sortby(\'Resource.publishedon\',$sortDir);\\n} else if (in_array($sortBy,array(\'rand\',\'random\',\'rand()\'))) {\\n    $c->sortby(\'RAND()\',\'\');\\n}\\n$tags = $modx->getCollection(\'modTemplateVarResource\',$c);\\n\\n\\/* parse TV values *\\/\\n$output = array();\\n$tagList = array();\\n$encoding = $modx->getOption(\'modx_charset\',$scriptProperties,\'UTF-8\');\\n$useMultibyte = $modx->getOption(\'use_multibyte\',$scriptProperties,false);\\nforeach ($tags as $tag) {\\n   $v = $tag->get(\'value\');\\n   $vs = explode($tvDelimiter,$v);\\n   foreach ($vs as $key) {\\n      $key = trim($key);\\n      if (empty($key)) continue;\\n      if ($toLower) { \\/* allow for case-insensitive filtering *\\/\\n          $key = $useMultibyte ? mb_strtolower($key,$encoding) : strtolower($key);\\n      }\\n      \\/* increment tag count *\\/\\n      if (empty($tagList[$key])) {\\n         $tagList[$key] = 1;\\n      } else { $tagList[$key]++; }\\n   }\\n}\\n\\n\\/* sort *\\/\\nswitch ($sortBy.\'-\'.$sortDir) {\\n    case \'publishedon-DESC\': case \'publishedon-ASC\': break;\\n    case \'tag-ASC\': ksort($tagList); break;\\n    case \'tag-DESC\': krsort($tagList); break;\\n    case \'count-DESC\': asort($tagList); break;\\n    case \'count-ASC\': default: arsort($tagList); break;\\n    case \'rand-ASC\': case \'random-ASC\': case \'rand()-asc\': $tagList = $tagLister->ashuffle($tagList); break;\\n}\\n\\n\\/* iterate *\\/\\n$totalTags = 0;\\n$i = $all ? 1 : 0;\\nforeach ($tagList as $tag => $count) {\\n    if ($i >= $limit) break;\\n    $tagCls = $cls.((!empty($altCls) && $i % 2)? \' \'.$altCls : \'\');\\n    if (!empty($firstCls) && $i == 0) $tagCls .= \' \'.$firstCls;\\n    if (!empty($lastCls) && ($i+1 >= $limit || $i == $count)) $tagCls .= \' \'.$lastCls;\\n    \\/* if tag is currently being viewed, mark as active *\\/\\n    if (!empty($activeCls) && $tag==$activeTag && (empty($activeKey) || $tv==$activeKey)) $tagCls .= \' \'.$activeCls;\\n    \\/* handle weighting for css *\\/\\n    if (!empty($weights) && !empty($weightCls)) $tagCls .= \' \'.$weightCls.ceil($count \\/ (max($tagList) \\/ $weights));\\n\\n    $output[] = $tagLister->getChunk($tpl,array(\\n        \'tag\' => $tag,\\n        \'tagVar\' => $tagVar,\\n        \'tagKey\' => $tv,\\n        \'tagKeyVar\' => $tagKeyVar,\\n        \'count\' => $count,\\n        \'target\' => $target,\\n        \'cls\' => $tagCls,\\n        \'idx\' => $i,\\n    ));\\n    $totalTags += $count;\\n    $i++;\\n}\\n\\nif ($all) {\\n    $allTpl = $modx->getOption(\'allTpl\',$scriptProperties,\'all\');\\n    $allChunk = $tagLister->getChunk($allTpl,array(\\n        \'tag\' => !empty($scriptProperties[\'allText\']) ? $scriptProperties[\'allText\'] : $modx->lexicon(\'all_tags\'),\\n        \'tagVar\' => $tagVar,\\n        \'tagKey\' => $tv,\\n        \'tagKeyVar\' => $tagKeyVar,\\n        \'count\' => $totalTags,\\n        \'target\' => $target,\\n        \'cls\' => $cls,\\n    ));\\n    if ($modx->getOption(\'allPosition\',$scriptProperties,\'B\') == \'T\') {\\n        array_unshift($output,$allChunk);\\n    } else {\\n        array_push($output,$allChunk);\\n    }\\n}\\n\\n\\/* output *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:28:{s:3:\\"tpl\\";a:6:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:23:\\"prop_taglister.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:2:\\"tv\\";a:6:{s:4:\\"name\\";s:2:\\"tv\\";s:4:\\"desc\\";s:22:\\"prop_taglister.tv_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"tags\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"tvDelimiter\\";a:6:{s:4:\\"name\\";s:11:\\"tvDelimiter\\";s:4:\\"desc\\";s:31:\\"prop_taglister.tvdelimiter_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\",\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"target\\";a:6:{s:4:\\"name\\";s:6:\\"target\\";s:4:\\"desc\\";s:26:\\"prop_taglister.target_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"tagVar\\";a:6:{s:4:\\"name\\";s:6:\\"tagVar\\";s:4:\\"desc\\";s:26:\\"prop_taglister.tagvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"tagKeyVar\\";a:6:{s:4:\\"name\\";s:9:\\"tagKeyVar\\";s:4:\\"desc\\";s:29:\\"prop_taglister.tagkeyvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"key\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"sortBy\\";a:6:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:26:\\"prop_taglister.sortby_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:5:\\"count\\";s:5:\\"value\\";s:5:\\"count\\";}i:1;a:2:{s:4:\\"text\\";s:3:\\"tag\\";s:5:\\"value\\";s:3:\\"tag\\";}}s:5:\\"value\\";s:5:\\"count\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"sortDir\\";a:6:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:27:\\"prop_taglister.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:9:\\"ascending\\";s:4:\\"vaue\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:10:\\"descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"limit\\";a:6:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:25:\\"prop_taglister.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"parents\\";a:6:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:27:\\"prop_taglister.parents_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"depth\\";a:6:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:25:\\"prop_taglister.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:14:\\"includeDeleted\\";a:6:{s:4:\\"name\\";s:14:\\"includeDeleted\\";s:4:\\"desc\\";s:34:\\"prop_taglister.includedeleted_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:18:\\"includeUnpublished\\";a:6:{s:4:\\"name\\";s:18:\\"includeUnpublished\\";s:4:\\"desc\\";s:38:\\"prop_taglister.includeunpublished_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"where\\";a:6:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:25:\\"prop_taglister.where_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:3:\\"cls\\";a:6:{s:4:\\"name\\";s:3:\\"cls\\";s:4:\\"desc\\";s:23:\\"prop_taglister.cls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"tl-tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"altCls\\";a:6:{s:4:\\"name\\";s:6:\\"altCls\\";s:4:\\"desc\\";s:26:\\"prop_taglister.altcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"tl-tag-alt\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:8:\\"firstCls\\";a:6:{s:4:\\"name\\";s:8:\\"firstCls\\";s:4:\\"desc\\";s:28:\\"prop_taglister.firstcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"lastCls\\";a:6:{s:4:\\"name\\";s:7:\\"lastCls\\";s:4:\\"desc\\";s:27:\\"prop_taglister.lastcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"toLower\\";a:6:{s:4:\\"name\\";s:7:\\"toLower\\";s:4:\\"desc\\";s:27:\\"prop_taglister.tolower_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:3:\\"all\\";a:6:{s:4:\\"name\\";s:3:\\"all\\";s:4:\\"desc\\";s:23:\\"prop_taglister.all_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"allTpl\\";a:6:{s:4:\\"name\\";s:6:\\"allTpl\\";s:4:\\"desc\\";s:26:\\"prop_taglister.alltpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"all\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"allPosition\\";a:6:{s:4:\\"name\\";s:11:\\"allPosition\\";s:4:\\"desc\\";s:31:\\"prop_taglister.allposition_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:6:\\"bottom\\";s:5:\\"value\\";s:1:\\"B\\";}i:1;a:2:{s:4:\\"text\\";s:3:\\"top\\";s:5:\\"value\\";s:1:\\"T\\";}}s:5:\\"value\\";s:1:\\"B\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"allText\\";a:6:{s:4:\\"name\\";s:7:\\"allText\\";s:4:\\"desc\\";s:27:\\"prop_taglister.alltext_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:13:\\"toPlaceholder\\";a:6:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:33:\\"prop_taglister.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:15:\\"outputSeparator\\";a:6:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:35:\\"prop_taglister.outputseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"activeCls\\";a:6:{s:4:\\"name\\";s:9:\\"activeCls\\";s:4:\\"desc\\";s:29:\\"prop_taglister.activecls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"weightCls\\";a:6:{s:4:\\"name\\";s:9:\\"weightCls\\";s:4:\\"desc\\";s:29:\\"prop_taglister.weightcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"tl-tag-weight\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"weights\\";a:6:{s:4:\\"name\\";s:7:\\"weights\\";s:4:\\"desc\\";s:27:\\"prop_taglister.weights_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"5\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}}","moduleguid":""}',
        'guid' => 'c34b85872e3d7b4fc27ce5b2459a3d8a',
        'native_key' => 1,
        'signature' => 'f58a45b9bd15bb81fa6cf69351e2cf2b',
      ),
      '7b12614e31a7ecb2a5b2e0c2f9558061' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"name":"tolinks","description":"Builds links from tags.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * tagLister\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modxcms.com>\\n *\\n * This file is part of tagLister, a simple tag listing snippet for MODx\\n * Revolution.\\n *\\n * tagLister is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * tagLister is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * tagLister; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package taglister\\n *\\/\\n\\/**\\n * tolinks snippet. Creates links out of tags.\\n *\\n * @package taglister\\n *\\/\\n$tagLister = $modx->getService(\'taglister\',\'TagLister\',$modx->getOption(\'taglister.core_path\',null,$modx->getOption(\'core_path\').\'components\\/taglister\\/\').\'model\\/taglister\\/\',$scriptProperties);\\nif (!($tagLister instanceof TagLister)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$inputDelim = $modx->getOption(\'inputDelim\',$scriptProperties,\',\');\\n$outputDelim = $modx->getOption(\'outputDelim\',$scriptProperties,\', \');\\n$tagRequestParam = $modx->getOption(\'tagRequestParam\',$scriptProperties,\'tag\');\\n$tagKeyVar = $modx->getOption(\'tagKeyVar\',$scriptProperties,\'key\');\\n$tagKey = $modx->getOption(\'tagKey\',$scriptProperties,\'tags\');\\n$target = !empty($scriptProperties[\'target\']) ? $scriptProperties[\'target\'] : $modx->resource->get(\'id\');\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'link\');\\n$cls = $modx->getOption(\'cls\',$scriptProperties,\'tl-tag\');\\n\\n\\/* get items *\\/\\n$items = $modx->getOption(\'items\',$scriptProperties,\'\');\\nif (empty($items)) return \'\';\\n$items = explode($inputDelim,$items);\\n\\n\\/* if extra params, set em *\\/\\n$extraParams = $modx->getOption(\'extraParams\',$scriptProperties,\'\');\\nif (!empty($extraParams)) {\\n    $extraParams = trim(trim(trim($extraParams,\'?\'),\'&\'),\'&amp;\');\\n    $eps= explode(\',\',$extraParams);\\n    $extraParams = array();\\n    foreach ($eps as $ep) {\\n        $ep = explode(\'=\',$ep);\\n        if (!empty($ep[1])) {\\n            $extraParams[$ep[0]] = $ep[1];\\n        }\\n    }\\n}\\n\\n\\/* iterate *\\/\\n$tags = array();\\nforeach ($items as $item) {\\n    $itemArray = array();\\n    $itemArray[\'item\'] = trim($item);\\n    $params = array(\\n        $tagRequestParam => $itemArray[\'item\'],\\n\\t\\t$tagKeyVar => $tagKey,\\n    );\\n    if (!empty($extraParams)) {\\n        $params = array_merge($extraParams,$params);\\n    }\\n    $itemArray[\'url\'] = $modx->makeUrl($target,\'\',$params);\\n    $itemArray[\'url\'] = str_replace(\' \',\'+\',$itemArray[\'url\']);\\n    $itemArray[\'cls\'] = $cls;\\n    $tags[] = $tagLister->getChunk($tpl,$itemArray);\\n}\\n\\n\\/* output *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$output = trim(implode($outputDelim,$tags),$outputDelim);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:10:{s:5:\\"items\\";a:6:{s:4:\\"name\\";s:5:\\"items\\";s:4:\\"desc\\";s:23:\\"prop_tolinks.items_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:3:\\"tpl\\";a:6:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:21:\\"prop_tolinks.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"link\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"target\\";a:6:{s:4:\\"name\\";s:6:\\"target\\";s:4:\\"desc\\";s:24:\\"prop_tolinks.target_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"inputDelim\\";a:6:{s:4:\\"name\\";s:10:\\"inputDelim\\";s:4:\\"desc\\";s:28:\\"prop_tolinks.inputdelim_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\",\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"outputDelim\\";a:6:{s:4:\\"name\\";s:11:\\"outputDelim\\";s:4:\\"desc\\";s:29:\\"prop_tolinks.outputdelim_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\", \\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:15:\\"tagRequestParam\\";a:6:{s:4:\\"name\\";s:15:\\"tagRequestParam\\";s:4:\\"desc\\";s:33:\\"prop_tolinks.tagrequestparam_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"tagKeyVar\\";a:6:{s:4:\\"name\\";s:9:\\"tagKeyVar\\";s:4:\\"desc\\";s:27:\\"prop_tolinks.tagkeyvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"key\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"tagKey\\";a:6:{s:4:\\"name\\";s:6:\\"tagKey\\";s:4:\\"desc\\";s:24:\\"prop_tolinks.tagkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"tags\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:3:\\"cls\\";a:6:{s:4:\\"name\\";s:3:\\"cls\\";s:4:\\"desc\\";s:21:\\"prop_tolinks.cls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"tl-tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:13:\\"toPlaceholder\\";a:6:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:31:\\"prop_tolinks.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}}","moduleguid":""}',
        'guid' => '8da087c61a6976f6d41d876113fa2257',
        'native_key' => 2,
        'signature' => 'ff73450b7e3de67c9e0a5f4ccfda4168',
      ),
      '38f8d4185eb717a3ca65147b90b29d0d' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"name":"getResourcesTag","description":"Wraps the getResources and getPage snippets to do tag-based navigation. Requires both of those snippets to run.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * tagLister\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modxcms.com>\\n *\\n * This file is part of tagLister, a simple tag listing snippet for MODx\\n * Revolution.\\n *\\n * tagLister is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * tagLister is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * tagLister; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package taglister\\n *\\/\\n\\/**\\n * Wrap the getPage\\/getResources call to implement tagging. Needs getPage and\\n * getResources to be installed to work.\\n *\\n * @package taglister\\n *\\/\\n$tagKeyVar = $modx->getOption(\'tagKeyVar\',$scriptProperties,\'key\');\\n$tagKey = (!empty($tagKeyVar) && !empty($_GET[$tagKeyVar]))? $_GET[$tagKeyVar] : $modx->getOption(\'tagKey\',$scriptProperties,\'tags\');\\n$tagRequestParam = $modx->getOption(\'tagRequestParam\',$scriptProperties,\'tag\');\\n$grSnippet = $modx->getOption(\'grSnippet\',$scriptProperties,\'getPage\');\\n$tag = $modx->getOption(\'tag\',$scriptProperties,urldecode($_GET[$tagRequestParam]));\\nif (!empty($tag)) {\\n    $tag = $modx->stripTags($tag);\\n    $tagSearchType = $modx->getOption(\'tagSearchType\',$scriptProperties,\'exact\');\\n    if ($tagSearchType == \'contains\') {\\n        $scriptProperties[\'tvFilters\'] = $tagKey.\'==%\'.$tag.\'%\';\\n    } else if ($tagSearchType == \'beginswith\') {\\n        $scriptProperties[\'tvFilters\'] = $tagKey.\'==%\'.$tag.\'\';\\n    } else if ($tagSearchType == \'endswith\') {\\n        $scriptProperties[\'tvFilters\'] = $tagKey.\'==\'.$tag.\'%\';\\n    } else {\\n        $scriptProperties[\'tvFilters\'] = $tagKey.\'==\'.$tag.\'\';\\n    }    \\n}\\n$elementObj = $modx->getObject(\'modSnippet\', array(\'name\' => $grSnippet));\\nif ($elementObj) {\\n    $elementObj->setCacheable(false);\\n    $output = $elementObj->process($scriptProperties);\\n} else {\\n    return \'You must have getPage and getResources downloaded and installed to use this snippet.\';\\n}\\nreturn $output;","locked":0,"properties":"a:38:{s:3:\\"tpl\\";a:6:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:17:\\"prop_grt.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"tplOdd\\";a:6:{s:4:\\"name\\";s:6:\\"tplOdd\\";s:4:\\"desc\\";s:20:\\"prop_grt.tplodd_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:8:\\"tplFirst\\";a:6:{s:4:\\"name\\";s:8:\\"tplFirst\\";s:4:\\"desc\\";s:22:\\"prop_grt.tplfirst_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"tplLast\\";a:6:{s:4:\\"name\\";s:7:\\"tplLast\\";s:4:\\"desc\\";s:21:\\"prop_grt.tpllast_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"sortby\\";a:6:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:20:\\"prop_grt.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"sortbyAlias\\";a:6:{s:4:\\"name\\";s:11:\\"sortbyAlias\\";s:4:\\"desc\\";s:25:\\"prop_grt.sortbyalias_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:13:\\"sortbyEscaped\\";a:6:{s:4:\\"name\\";s:13:\\"sortbyEscaped\\";s:4:\\"desc\\";s:27:\\"prop_grt.sortbyescaped_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"sortdir\\";a:6:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:21:\\"prop_grt.sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:9:\\"ascending\\";s:4:\\"vaue\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:10:\\"descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"limit\\";a:6:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:19:\\"prop_grt.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"offset\\";a:6:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:20:\\"prop_grt.offset_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"tvFilters\\";a:6:{s:4:\\"name\\";s:9:\\"tvFilters\\";s:4:\\"desc\\";s:23:\\"prop_grt.tvfilters_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"depth\\";a:6:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:19:\\"prop_grt.depth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"parents\\";a:6:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:21:\\"prop_grt.parents_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:14:\\"includeContent\\";a:6:{s:4:\\"name\\";s:14:\\"includeContent\\";s:4:\\"desc\\";s:28:\\"prop_grt.includecontent_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"includeTVs\\";a:6:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:24:\\"prop_grt.includetvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"processTVs\\";a:6:{s:4:\\"name\\";s:10:\\"processTVs\\";s:4:\\"desc\\";s:24:\\"prop_grt.processtvs_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:8:\\"tvPrefix\\";a:6:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:22:\\"prop_grt.tvprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tv.\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:3:\\"idx\\";a:6:{s:4:\\"name\\";s:3:\\"idx\\";s:4:\\"desc\\";s:17:\\"prop_grt.idx_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"first\\";a:6:{s:4:\\"name\\";s:5:\\"first\\";s:4:\\"desc\\";s:19:\\"prop_grt.first_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:4:\\"last\\";a:6:{s:4:\\"name\\";s:4:\\"last\\";s:4:\\"desc\\";s:18:\\"prop_grt.last_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:5:\\"debug\\";a:6:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:19:\\"prop_grt.debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"namespace\\";a:6:{s:4:\\"name\\";s:9:\\"namespace\\";s:4:\\"desc\\";s:23:\\"prop_grt.namespace_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:4:\\"page\\";a:6:{s:4:\\"name\\";s:4:\\"page\\";s:4:\\"desc\\";s:18:\\"prop_grt.page_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"pageVarKey\\";a:6:{s:4:\\"name\\";s:10:\\"pageVarKey\\";s:4:\\"desc\\";s:24:\\"prop_grt.pagevarkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"page\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:8:\\"totalVar\\";a:6:{s:4:\\"name\\";s:8:\\"totalVar\\";s:4:\\"desc\\";s:22:\\"prop_grt.totalvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"total\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"pageLimit\\";a:6:{s:4:\\"name\\";s:9:\\"pageLimit\\";s:4:\\"desc\\";s:23:\\"prop_grt.pagelimit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"5\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:12:\\"elementClass\\";a:6:{s:4:\\"name\\";s:12:\\"elementClass\\";s:4:\\"desc\\";s:26:\\"prop_grt.elementclass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"modSnippet\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:7:\\"element\\";a:6:{s:4:\\"name\\";s:7:\\"element\\";s:4:\\"desc\\";s:21:\\"prop_grt.element_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"getResources\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"pageNavVar\\";a:6:{s:4:\\"name\\";s:10:\\"pageNavVar\\";s:4:\\"desc\\";s:24:\\"prop_grt.pagenavvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"page.nav\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:10:\\"pageNavTpl\\";a:6:{s:4:\\"name\\";s:10:\\"pageNavTpl\\";s:4:\\"desc\\";s:24:\\"prop_grt.pagenavtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:78:\\"<li[[+classes]]><a[[+classes]][[+title]] href=\\"[[+href]]\\">[[+pageNo]]<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:12:\\"pageFirstTpl\\";a:6:{s:4:\\"name\\";s:12:\\"pageFirstTpl\\";s:4:\\"desc\\";s:26:\\"prop_grt.pagefirsttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:76:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">First<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"pageLastTpl\\";a:6:{s:4:\\"name\\";s:11:\\"pageLastTpl\\";s:4:\\"desc\\";s:25:\\"prop_grt.pagelasttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:75:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">Last<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"pagePrevTpl\\";a:6:{s:4:\\"name\\";s:11:\\"pagePrevTpl\\";s:4:\\"desc\\";s:25:\\"prop_grt.pageprevtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:79:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">&lt;&lt;<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:11:\\"pageNextTpl\\";a:6:{s:4:\\"name\\";s:11:\\"pageNextTpl\\";s:4:\\"desc\\";s:25:\\"prop_grt.pagenexttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:79:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">&gt;&gt;<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:6:\\"tagKey\\";a:6:{s:4:\\"name\\";s:6:\\"tagKey\\";s:4:\\"desc\\";s:20:\\"prop_grt.tagkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"tags\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:9:\\"tagKeyVar\\";a:6:{s:4:\\"name\\";s:9:\\"tagKeyVar\\";s:4:\\"desc\\";s:23:\\"prop_grt.tagkeyvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"key\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:15:\\"tagRequestParam\\";a:6:{s:4:\\"name\\";s:15:\\"tagRequestParam\\";s:4:\\"desc\\";s:29:\\"prop_grt.tagrequestparam_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tag\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}s:13:\\"tagSearchType\\";a:6:{s:4:\\"name\\";s:13:\\"tagSearchType\\";s:4:\\"desc\\";s:27:\\"prop_grt.tagsearchtype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:16:\\"grt.tst_contains\\";s:5:\\"value\\";s:8:\\"contains\\";}i:1;a:2:{s:4:\\"text\\";s:13:\\"grt.tst_exact\\";s:5:\\"value\\";s:5:\\"exact\\";}i:2;a:2:{s:4:\\"text\\";s:18:\\"grt.tst_beginswith\\";s:5:\\"value\\";s:10:\\"beginswith\\";}i:3;a:2:{s:4:\\"text\\";s:16:\\"grt.tst_endswith\\";s:5:\\"value\\";s:8:\\"endswith\\";}}s:5:\\"value\\";s:8:\\"contains\\";s:7:\\"lexicon\\";s:20:\\"taglister:properties\\";}}","moduleguid":""}',
        'guid' => '54b0feca716d5eda7c40dca1042122c6',
        'native_key' => 3,
        'signature' => 'b06e070044ae5343910ac3393886f28b',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'taglister',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"taglister-1.1.3-pl\\/modCategory\\/c8254a1e716bc05a7004547734db650a\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"taglister"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'e5d2b537bc6a9f5e3ba0680e84013c89',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => 'c8254a1e716bc05a7004547734db650a',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"tagLister"}',
);